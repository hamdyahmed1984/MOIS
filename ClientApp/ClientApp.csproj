<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup Label="Globals">
    <SccProjectName></SccProjectName>
    <SccProvider></SccProvider>
    <SccAuxPath></SccAuxPath>
    <SccLocalPath></SccLocalPath>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <UserSecretsId>9c910991-3f0d-42d7-8d19-537eb7922914</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="8.1.1" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="6.1.1" />
    <PackageReference Include="FluentValidation.AspNetCore" Version="8.4.0" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Extensions.Logging.AzureAppServices" Version="2.2.5" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.2.3" />
    <PackageReference Include="Serilog.AspNetCore" Version="2.1.1" />
    <PackageReference Include="Serilog.Enrichers.Environment" Version="2.1.3" />
    <PackageReference Include="Serilog.Enrichers.Process" Version="2.0.1" />
    <PackageReference Include="Serilog.Enrichers.Thread" Version="3.1.0" />
    <PackageReference Include="Serilog.Formatting.Compact" Version="1.0.0" />
    <PackageReference Include="Serilog.Settings.Configuration" Version="3.1.0" />
    <PackageReference Include="Serilog.Sinks.File" Version="4.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="4.0.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\src\app\models\WizardSteps\**" />
    <Compile Remove="Logs\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\src\app\models\WizardSteps\**" />
    <Content Remove="Logs\**" />
    <EmbeddedResource Remove="ClientApp\src\app\models\WizardSteps\**" />
    <EmbeddedResource Remove="Logs\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\src\app\models\WizardSteps\**" />
    <None Remove="Logs\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\app-routing.module.ts" />
    <None Remove="ClientApp\src\app\config\config.ts" />
    <None Remove="ClientApp\src\app\helpers\canActivateAuthGuard.ts" />
    <None Remove="ClientApp\src\app\helpers\forbidden-name.ts" />
    <None Remove="ClientApp\src\app\helpers\helpers.ts" />
    <None Remove="ClientApp\src\app\helpers\same-name.ts" />
    <None Remove="ClientApp\src\app\models\AccessTokenModel.ts" />
    <None Remove="ClientApp\src\app\models\Documents\CriminalStateRecordModel.ts" />
    <None Remove="ClientApp\src\app\models\Lookups\LookupBaseModel.ts" />
    <None Remove="ClientApp\src\app\models\Lookups\PoliceDepartmentModel.ts" />
    <None Remove="ClientApp\src\app\models\RequestModel.ts" />
    <None Remove="ClientApp\src\app\models\Security\RefreshTokenModel.ts" />
    <None Remove="ClientApp\src\app\models\Security\RevokeTokenModel.ts" />
    <None Remove="ClientApp\src\app\models\Security\UserCredentialsModel.ts" />
    <None Remove="ClientApp\src\app\models\Security\UserModel.ts" />
    <None Remove="Controllers\Resources\Lookups\PostalCodeModel.ts" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Application\Application.csproj" />
    <ProjectReference Include="..\Persistence\Persistence.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\app\components\csr\" />
    <Folder Include="ClientApp\src\app\components\cso\" />
    <Folder Include="ClientApp\src\app\components\wp\" />
    <Folder Include="ClientApp\src\app\directives\" />
    <Folder Include="ClientApp\src\assets\js\" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\app-routing.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\config\config.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\helpers\canActivateAuthGuard.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\helpers\forbidden-name.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\helpers\helpers.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\helpers\same-name.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\Documents\CriminalStateRecordModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\Lookups\PoliceDepartmentModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\Lookups\LookupBaseModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\Security\UserModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\Security\UserCredentialsModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\Security\RevokeTokenModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\Security\RefreshTokenModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\Security\AccessTokenModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\RequestModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\Lookups\PostalCodeModel.ts" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
